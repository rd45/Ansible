- name: build a given stack for a given customer
  hosts: all

  vars:
    v_customer_id:      '{{ p_customer_id }}'
    v_stack_id:         '{{ p_stack_id }}'
    v_build_id:         '{{ p_build_id }}'
    
    v_project_dir:       /home/opc/my-builds/{{ v_customer_id }}/{{ v_stack_id }}/{{ v_build_id }}
    v_repo:              https://github.com/rd45/my-stacks.git
    v_tf_var_file:       /home/opc/Terraform/terraform.tfvars

  tasks:
    # get the .tf files from the git repo
    - name: git checkout
      git: 
        repo:           '{{ v_repo }}'
        dest:            /home/opc/my-stacks
    
    # create a new project directory, named after the current build operation ID (passed as a parameter)
    - name: create directory
      file:
        path:           '{{ v_project_dir }}'
        state:           directory
        
    # copy the .tf file for the stack into the project directory
    - name: copy the .tf file
      copy: 
        src:             /home/opc/my-stacks/{{ v_customer_id }}/stacks/{{ v_stack_id}}/main.tf
        dest:           '{{ v_project_dir }}'
        remote_src:      true
   
    # build it, with the terraform module
    - name: build whatever is in the .tf file
      terraform: 
        project_path:   '{{ v_project_dir }}'
        variables_file: '{{ v_tf_var_file }}'
        force_init:      yes
        state:           present
      register:          v_result
      
    # show output
    - name: output from terraform
      debug:
        msg:            '{{ v_result }}'
